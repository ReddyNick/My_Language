//cx is an address which RAM is free after
push 0
pop cx


push 2
pop cx

//___main___//
in 
pop [cx + 0]//авокадо
in 
pop [cx + 1]//баунти
in 
pop [cx + 2]//специи

//assignment//

//function_call

 push cx
push [cx + 2]//специи
pop ax

push ax
push [cx + 1]//баунти
pop ax

push ax
push [cx + 0]//авокадо
pop ax

push ax
push cx 
push 6 
add
 pop cx


//initialize arguments
pop [cx + 0]
pop [cx + 1]
pop [cx + 2]
call духовка:
 pop cx

push ax
pop [cx + 3]//блюдо
//end of assignment//


//if-expression//

//(condition)//
push 0//const 
pop ax

push ax//to stack

push [cx + 3]//блюдо
pop ax

push ax//to stack

jne label_0:
//(condition)//
push 0//const 
pop ax

push ax
out
label_0:
//end of if-expression//

//if-expression//

//(condition)//
push 1//const 
pop ax

push ax//to stack

push [cx + 3]//блюдо
pop ax

push ax//to stack

jne label_1:
//(condition)//
push 1//const 
pop ax

push ax
out
push [0]//КореньБерезы
pop ax

push ax
out
label_1:
//end of if-expression//

//if-expression//

//(condition)//
push 2//const 
pop ax

push ax//to stack

push [cx + 3]//блюдо
pop ax

push ax//to stack

jne label_2:
//(condition)//
push 1//const 
pop ax

push ax
out
push [0]//КореньБерезы
pop ax

push ax
out
push [1]//КореньДуба
pop ax

push ax
out
label_2:
//end of if-expression//

//if-expression//

//(condition)//
push 3//const 
pop ax

push ax//to stack

push [cx + 3]//блюдо
pop ax

push ax//to stack

jne label_3:
//(condition)//
push 888//const 
pop ax

push ax
out
label_3:
//end of if-expression//
end

//___end_of_main___//


//___function миксер___//
миксер:

//if/else-expression//

//(condition)//
push 0//const 
pop ax

push ax//to stack

push [cx + 0]//баунти
pop ax

push ax//to stack

jne label_4:
//(condition)//

//if/else-expression//

//(condition)//
push 0//const 
pop ax

push ax//to stack

push [cx + 1]//специи
pop ax

push ax//to stack

jne label_5:
//(condition)//
push 3//const 
pop ax


ret
jmp label_6:
label_5:
push 0//const 
pop ax


ret
label_6:
//end of if/else-expression//
jmp label_7:
label_4:

//assignment//
push -1//const
pop ax

push ax//to stack

push [cx + 1]//специи
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

push [cx + 0]//баунти
pop ax

push ax//to stack

div
pop ax

push ax
pop [0]//КореньБерезы
//end of assignment//

push 1//const 
pop ax


ret
label_7:
//end of if/else-expression//
ret

//___end of function миксер___//


//___function духовка___//
духовка:

//if/else-expression//

//(condition)//
push 0//const 
pop ax

push ax//to stack

push [cx + 0]//авокадо
pop ax

push ax//to stack

jne label_8:
//(condition)//

//function_call

 push cx
push [cx + 2]//специи
pop ax

push ax
push [cx + 1]//баунти
pop ax

push ax
push cx 
push 5 
add
 pop cx


//initialize arguments
pop [cx + 0]
pop [cx + 1]
call миксер:
 pop cx


ret
jmp label_9:
label_8:

//assignment//
push [cx + 1]//баунти
pop ax

push ax//to stack

push [cx + 1]//баунти
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

push 4//const
pop ax

push ax//to stack

push [cx + 2]//специи
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

push [cx + 0]//авокадо
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

sub
pop ax

push ax
pop [cx + 3]//Доширак
//end of assignment//


//if-expression//

//(condition)//
push 0//const 
pop ax

push ax//to stack

push [cx + 3]//Доширак
pop ax

push ax//to stack

jae label_10:
//(condition)//
push 0//const 
pop ax


ret
label_10:
//end of if-expression//

//if-expression//

//(condition)//
push 0//const 
pop ax

push ax//to stack

push [cx + 3]//Доширак
pop ax

push ax//to stack

jne label_11:
//(condition)//

//assignment//
push -1//const
pop ax

push ax//to stack

push [cx + 1]//баунти
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

push 2//const
pop ax

push ax//to stack

push [cx + 0]//авокадо
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

div
pop ax

push ax
pop [0]//КореньБерезы
//end of assignment//

push 1//const 
pop ax


ret
label_11:
//end of if-expression//

//assignment//
push -1//const
pop ax

push ax//to stack

push [cx + 1]//баунти
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

push [cx + 3]//Доширак
pop ax

push ax
sqrt
pop ax

push ax//to stack

sub
pop ax

push ax//to stack

push 2//const
pop ax

push ax//to stack

push [cx + 0]//авокадо
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

div
pop ax

push ax
pop [0]//КореньБерезы
//end of assignment//


//assignment//
push -1//const
pop ax

push ax//to stack

push [cx + 1]//баунти
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

push [cx + 3]//Доширак
pop ax

push ax
sqrt
pop ax

push ax//to stack

add
pop ax

push ax//to stack

push 2//const
pop ax

push ax//to stack

push [cx + 0]//авокадо
pop ax

push ax//to stack

mul
pop ax

push ax//to stack

div
pop ax

push ax
pop [1]//КореньДуба
//end of assignment//

push 2//const 
pop ax


ret
label_9:
//end of if/else-expression//
ret

//___end of function духовка___//
